/**
 *
 */
package com.u14n.model.user.bean;

import junit.framework.Assert;

/**
 * @author Klaus Wenger
 */
public class NewUserBeanTest extends UserBeanTest {
    /* (non-Javadoc)
     * @see junit.framework.TestCase#setUp()
     */
    @Override
    protected void setUp() throws Exception {
        super.setUp();
        super.kjwenger =
            new NewUserBean(UserBeanTest.KJWENGER, UserBeanTest.LUSDFHGLWEK);
    }
    /* (non-Javadoc)
     * @see junit.framework.TestCase#tearDown()
     */
    @Override
    protected void tearDown() throws Exception {
        super.tearDown();
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#NewUserBean()}.
     */
    public void testNewUserBean() {
        final NewUserBean newUserBean = new NewUserBean();
        Assert.assertNull(newUserBean.getName());
        Assert.assertNull(newUserBean.getPassword());
        Assert.assertNull(newUserBean.getConfirmPassword());
        Assert.assertTrue(newUserBean.checkPassword(null));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.EMPTY));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.LUSDFHGLWEK));
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#NewUserBean(java.lang.String)}.
     */
    public void testNewUserBeanString() {
        final NewUserBean newUserBean = new NewUserBean(UserBeanTest.KJWENGER);
        Assert.assertEquals(UserBeanTest.KJWENGER, newUserBean.getName());
        Assert.assertNull(newUserBean.getPassword());
        Assert.assertNull(newUserBean.getConfirmPassword());
        Assert.assertTrue(newUserBean.checkPassword(null));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.EMPTY));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.LUSDFHGLWEK));
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#NewUserBean(java.lang.String, java.lang.String)}.
     */
    public void testNewUserBeanStringString() {
        final NewUserBean newUserBean =
            new NewUserBean(UserBeanTest.KJWENGER, UserBeanTest.LUSDFHGLWEK);
        Assert.assertEquals(UserBeanTest.KJWENGER, newUserBean.getName());
        Assert.assertEquals(UserBeanTest.LUSDFHGLWEK,
                newUserBean.getPassword());
        Assert.assertNull(newUserBean.getConfirmPassword());
        Assert.assertFalse(newUserBean.checkPassword(null));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.EMPTY));
        Assert.assertTrue(newUserBean.checkPassword(UserBeanTest.LUSDFHGLWEK));
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#NewUserBean(com.u14n.model.user.User)}.
     */
    public void testNewUserBeanUser() {
        final NewUserBean newUserBean = new NewUserBean(this.kjwenger);
        Assert.assertEquals(this.kjwenger, newUserBean);
        Assert.assertEquals(UserBeanTest.KJWENGER, newUserBean.getName());
        Assert.assertEquals(UserBeanTest.LUSDFHGLWEK,
                newUserBean.getPassword());
        Assert.assertNull(newUserBean.getConfirmPassword());
        Assert.assertFalse(newUserBean.checkPassword(null));
        Assert.assertFalse(newUserBean.checkPassword(UserBeanTest.EMPTY));
        Assert.assertTrue(newUserBean.checkPassword(UserBeanTest.LUSDFHGLWEK));
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#getConfirmPassword()}.
     */
    public void testGetConfirmPassword() {
        Assert.assertNull(((NewUserBean) this.kjwenger).getConfirmPassword());
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#setConfirmPassword(java.lang.String)}.
     */
    public void testSetConfirmPassword() {
        final NewUserBean newUserBean = (NewUserBean) this.kjwenger;
        Assert.assertNull(newUserBean.getConfirmPassword());
        newUserBean.setConfirmPassword(UserBeanTest.LUSDFHGLWEK);
        Assert.assertEquals(UserBeanTest.LUSDFHGLWEK,
                newUserBean.getConfirmPassword());
        Assert.assertEquals(newUserBean.getPassword(),
                newUserBean.getConfirmPassword());
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#validateConfirmPassword()}.
     */
    public void testValidateConfirmPassword() {
        final NewUserBean newUserBean = (NewUserBean) this.kjwenger;
        Assert.assertNull(newUserBean.getConfirmPassword());
        newUserBean.setConfirmPassword(newUserBean.getPassword());
        newUserBean.validateConfirmPassword();
    }
    /**
     * Test method for {@link com.u14n.model.user.bean.NewUserBean#validateNameChange()}.
     */
    @Override
    public void testValidateNameChange() {
        super.kjwenger.setName(UserBeanTest.DDROUJKOV);
    }
}
